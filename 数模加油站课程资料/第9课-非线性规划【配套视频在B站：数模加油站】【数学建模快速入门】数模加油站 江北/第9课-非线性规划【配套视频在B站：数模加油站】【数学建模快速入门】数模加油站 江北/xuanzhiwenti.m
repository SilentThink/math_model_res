
%%%第一问：线性规划

clear;clc;
% 6个工地坐标
a=[1.25 8.75 0.5 5.75 3 7.25];
b=[1.25 0.75 4.75 5 6.5 7.75];
% 临时料场位置
x=[5 2];
y=[1 7];
% 6个工地水泥日用量
d=[3 5 4 7 6 11];
% 计算目标函数系数，即6工地与两个料场的距离，总共12个值
for i=1:6   % 对于6个工地
    for j=1:2       % 接收两个料场的供用
        l(i,j)=sqrt((x(j)-a(i))^2+(y(j)-b(i))^2);   % 距离
    end
end
f = [l(:,1);l(:,2)];    % 目标函数系数向量，总共12个值

% 不等式约束条件的变量系数和常数项
% 双下标转换成单下标：x11=x1，x21=x2，x31=x3，x41=x4，…，x62=x12
A = [1 1 1 1 1 1 0 0 0 0 0 0
     0 0 0 0 0 0 1 1 1 1 1 1];  
 
% 两个临时料场日储量
b = [20;20];

% 矩阵的行数是约束条件个数，列数是变量个数
% 等式约束的变量系数和常数项
Aeq = [eye(6),eye(6)];    % 两个单位矩阵横向拼成
beq=[d(1);d(2);d(3);d(4);d(5);d(6)];
% 所有变量下限全是0
Vlb=[0 0 0 0 0 0 0 0 0 0 0 0]; 
[x,fval]=linprog(f,A,b,Aeq,beq,Vlb);
x,fval

%%%第二问：非线性规划
% 注意！第二问中求新料场位置，所以两个料场的横纵坐标也是变量，所以多了4个变量
% 对新坐标没有不等式约束，所以其不等式约束条件里的系数为0
A2 = [1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0];
B2 = [20;20];
% 对新坐标也没有等式约束，所以相应项也为0
Aeq2 = [eye(6),eye(6),zeros(6,4)];    % 两个单位矩阵和一个全0矩阵拼成
beq2=[3 5 4 7 6 11]';
Vlb2=[zeros(12,1);-inf;-inf;-inf;-inf];
% 非线性规划必须赋初值，可以基于问题情况来设，或设置rand()随机数等等；
% 初始值设为线性规划的计算结果，即临时料场的坐标
% 设置初始值x0，此处可直接使用第一问的值作为初始值；
x0=[3 5 0 7 0 1 0 0 4 0 6 10 5 1 2 7]';  
[x2,fval2]=fmincon(@fun2,x0,A2,B2,Aeq2,beq2,Vlb2)
% 若约束条件里有非线性函数，可使用在fmincon里使用nonlcon 项

% 若有条件，可使用蒙特卡罗法求一个近似解作为初始值
% 1、因为第2问模型中有16个变量，所以要给16个变量分别生成随机值，作为当前解；
% 2、判断这些当前解是否满足模型的约束条件
% 3、若满足，代入目标函数，求当前目标函数值
% 4、判断当前目标函数值是否比已求的较优函数值更好，若是，则替换掉较优函数值和对应的较优解
% 5、不断重复前5步，构成统计意义，求得较优解。
p0 = 10000; n = 10^6; tic
x_m0 = 0;
for i = 1:n
    % 前12个数是6个工地从两个料场接收的量，6个工地分别需要3,5,4,7,6,11吨水泥
    % 所以前12个变量分别需要取0到3，0到5，……，0到11的随机数
    % 为加速求近似，取前12个变量（工地从料场接受的量）为随机整数
    % randi(n)为随机取1到n之间的一个整数，则randi(n+1)-1为取0到n间随机整数
    % 后4个变量是两个料场的横纵坐标，取一定范围内的随机数（根据题目，工地坐标都在0到9，所以此处取0到9）
    x_m = [randi(4)-1,randi(6)-1,randi(5)-1,randi(8)-1,randi(7)-1,randi(12)-1,...
        randi(4)-1,randi(6)-1,randi(5)-1,randi(8)-1,randi(7)-1,randi(12)-1,...
        9*rand(1,4)];
    
    [g,k] = constraint(x_m);        % 约束条件
    if all(g<=0)   % 等式约束难以严格满足，所以此处相差不大即可算近似
        if all(abs(k)<=1)
            ff = fun2(x_m);     % 目标函数
            if ff<p0
                x_m0 = x_m; p0 = ff;
            end
        end
    end
  
end
x_m0,p0,toc
% 以采样10^6次的蒙特卡罗法求得的近似值作为初始值，调用fmincon
[x3,fval3]=fmincon(@fun2,x_m0,A2,B2,Aeq2,beq2,Vlb2)
% 此时最终求得的结果fval3 = 85.4054，
% 优于前面以第一问线性规划结果为初始值时求得的90.4920
% 注意！！！非线性规划每次求解的结果都不一样！！！
% 多次运行相同代码，得出的结果不相同是正常的！！！
